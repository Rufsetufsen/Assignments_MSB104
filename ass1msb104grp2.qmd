---
title: "ass1msb104grp2"
format: html
editor: visual
---

```{r}
#| label: setup
library (tidyverse)
library (PxWebApiData)
library(xml2)
library(XML)
library(readxl)
library(purrr)
```

## Data Acquisition

### GDP per Region

```{r}
#Removing the metadata from the top.
raw_econ <- read_excel("./Data/GDP_noFlag.xlsx", sheet = "Sheet 1", col_types = "text", skip = 6)
#Dropping the first row to align time with years
  raw_econ <- raw_econ[-1,]
  names(raw_econ)[1] <- "Geo_Labels"
print(raw_econ)
```

```{r}
# Making raw_econ into long format.
tidy_econ <- pivot_longer(data = raw_econ,
             cols = -Geo_Labels,
             names_to = "Time",
             values_to = "GDP Million EUR")

```

### Demographic Data 

```{r}
#Removing the metadata from the top.
raw_demo <- read_excel("./Data/demo_noFlag.xlsx", sheet = "Sheet 1", col_types = "text", skip = 8)
#Dropping the first row to align time with years
  raw_demo <- raw_demo[-1,]
  names(raw_demo)[1] <- "Geo_Codes"
  names(raw_demo)[2] <- "Geo_Labels"
print(raw_demo)
```

```{r}
# Making raw_demo into long format.
tidy_demo <- pivot_longer(data = raw_demo,
             cols = c(-Geo_Codes, -Geo_Labels),
             names_to = "Time",
             values_to = "Population")

```
## GDP Per capita:

```{r}
# Joining the two datasets
tidyjoined <- left_join(tidy_demo, tidy_econ, by = join_by(Geo_Labels, Time), keep = FALSE)
# Mutating to add column for GDP per capita.
 tidyjoined <- tidyjoined %>%
    mutate(
    `GDP Million EUR` = as.numeric(`GDP Million EUR`),
    Population = as.numeric(Population),
    GDP_Capita = (`GDP Million EUR` * 1000000) / Population
  )
head(tidyjoined, 15)
```

```{r}
tidyjoined_drop <- tidyjoined %>% 
  drop_na()
```

```{r}
data <- read_xlsx(tidyjoined_drop)
subset_data <- data[]
```




